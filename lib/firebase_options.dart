// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
// TODO: CYBERSECURITY TEAM - The API keys below are exposed in the client-side code.
// For production, these keys should be rotated and secured. Consider using
// environment-specific configurations or a backend service to provision these
// keys to the client to limit exposure and prevent quota abuse.
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'AIzaSyDyff9wFevnVortq7lpaxNc7mBHgooLAGA',
    appId: '1:595015362022:web:15f7c11e8e32ac3e1ba227',
    messagingSenderId: '595015362022',
    projectId: 'tnb-onboarding-3006',
    authDomain: 'tnb-onboarding-3006.firebaseapp.com',
    storageBucket: 'tnb-onboarding-3006.firebasestorage.app',
    measurementId: 'G-LN1PEPEBSG',
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyCkKntFpVScTsI8gjtR8hUG3MAEQwxajkM',
    appId: '1:595015362022:android:cd6f91c648796f461ba227',
    messagingSenderId: '595015362022',
    projectId: 'tnb-onboarding-3006',
    storageBucket: 'tnb-onboarding-3006.firebasestorage.app',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyDz_-g2RczXs1L_LLPc9DEwGKjzZ0nwYxs',
    appId: '1:595015362022:ios:d96ba0f56e9a0c071ba227',
    messagingSenderId: '595015362022',
    projectId: 'tnb-onboarding-3006',
    storageBucket: 'tnb-onboarding-3006.firebasestorage.app',
    iosBundleId: 'com.example.onboardingTnbAppPartEizul',
  );

  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: 'AIzaSyDz_-g2RczXs1L_LLPc9DEwGKjzZ0nwYxs',
    appId: '1:595015362022:ios:d96ba0f56e9a0c071ba227',
    messagingSenderId: '595015362022',
    projectId: 'tnb-onboarding-3006',
    storageBucket: 'tnb-onboarding-3006.firebasestorage.app',
    iosBundleId: 'com.example.onboardingTnbAppPartEizul',
  );

  static const FirebaseOptions windows = FirebaseOptions(
    apiKey: 'AIzaSyDyff9wFevnVortq7lpaxNc7mBHgooLAGA',
    appId: '1:595015362022:web:bc8c4001addfefc11ba227',
    messagingSenderId: '595015362022',
    projectId: 'tnb-onboarding-3006',
    authDomain: 'tnb-onboarding-3006.firebaseapp.com',
    storageBucket: 'tnb-onboarding-3006.firebasestorage.app',
    measurementId: 'G-CMNSQKPCVY',
  );
}
